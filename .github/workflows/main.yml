name: Java CI

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          
      - name: test
        run: mvn test
          
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: "target/site/jacoco/jacoco.xml"

  build-deploy:
    runs-on: ubuntu-latest
    
    needs: [test]

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          
      - name: Update application.properties file
        run: |
         rm -f src/main/resources/application.properties
         touch src/main/resources/application.properties
         echo spring.datasource.url=${{ secrets.POSTGRES_URL }} >> src/main/resources/application.properties
         echo spring.datasource.username=${{ secrets.POSTGRES_USER }} >> src/main/resources/application.properties
         echo spring.datasource.password=${{ secrets.POSTGRES_PASSWORD }} >> src/main/resources/application.properties
         echo spring.jpa.hibernate.ddl-auto=update >> src/main/resources/application.properties
          
      - name: build
        run: mvn package -Dmaven.test.skip
        
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
          
      - name: Push to docker hub
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: dockerleonardosanches/praticandodocker:latest
          
      - name: Build and Push container heroku
        uses: gonuit/heroku-docker-deploy@v1.3.3
        with:
          email: ${{ secrets.HEROKU_EMAIL }}

          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}

          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}

          dockerfile_directory: ./

          dockerfile_name: Dockerfile
